{"ast":null,"code":"var _jsxFileName = \"C:\\\\Webathon\\\\artisticdots\\\\src\\\\Pages\\\\Home\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls'; //(use it after camera)\n\nimport { BufferAttribute, BufferGeometry } from 'three'; // import dat from 'dat.gui'\n\nimport { RectAreaLightHelper } from 'three/examples/jsm/helpers/RectAreaLightHelper.js';\nimport canvas from '../../Pages/Home/Home';\nimport { useEffect } from 'react';\nimport texture from '../../Assets/textures/1.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const texturLoader = new THREE.TextureLoader();\n    const star = texturLoader.load(texture); //Customs Geometry\n\n    const particalGeometry = new THREE.BufferGeometry();\n    const count = 100;\n    const positions = new Float32Array(count * 3); //Count * 3 because there is x  ,y, ,z to a single particle\n\n    const colors = new Float32Array(count * 3);\n\n    for (let i = 0; i < count * 3; i++) {\n      positions[i] = -0.5;\n      colors[i] = Math.random();\n    }\n\n    particalGeometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n    particalGeometry.setAttribute('color', new THREE.BufferAttribute(colors, 3)); //Material\n\n    const particleMaterial = new THREE.PointsMaterial({\n      size: 0.1,\n      sizeAttenuation: true,\n      //Gives perspective small if far and big if near\n      // color : 0xff88cc, //hide so other colors won't be impacted\n      transparent: true,\n      alphaMap: star,\n      //shows black edges from image \n      // alphaTest : 0.001 //Basically Telling renderer to not render the black part of image\n      // depthTest : false, //Basically says donot render which is forward and which is behind solves issue but not good when there is an object\n      depthWrite: false,\n      //THis solves all our Issues\n      blending: THREE.AdditiveBlending,\n      //Glows if there is particle over another ,\n      vertexColors: true //Whithout it wont change colors\n\n    });\n    const particle = new THREE.Points(particalGeometry, particleMaterial);\n    scene.add(particle);\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);\n    scene.add(ambientLight);\n    const sizes = {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n    const camera = new THREE.PerspectiveCamera(75, sizes.width / sizes.height);\n    camera.position.z = 3;\n    scene.add(camera);\n    const canvas = document.querySelector('.webgl');\n    console.log(canvas);\n    const renderer = new THREE.WebGLRenderer({\n      canvas: canvas\n    });\n    renderer.setSize(sizes.width, sizes.height);\n    const controls = new OrbitControls(camera, canvas);\n    controls.enableDamping = true; //Clock \n\n    const clock = new THREE.Clock();\n\n    function tick() {\n      const elapsedTime = clock.getElapsedTime();\n\n      for (let i = 0; i < count; i++) {\n        const n = i * 3;\n        const x = particalGeometry.attributes.position.array[n];\n        particalGeometry.attributes.position.array[n + 1] = Math.sin(elapsedTime + x); //n + 1 will access y \n      }\n\n      particalGeometry.attributes.position.needsUpdate = true; //to update attributes\n      //Update Controls\n\n      controls.update(); //render\n\n      renderer.render(scene, camera);\n      window.requestAnimationFrame(tick); // requestAnimationFrame() runs at 60 Frames per Second(FPS)\n    }\n\n    tick();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      className: \"webgl\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","THREE","OrbitControls","BufferAttribute","BufferGeometry","RectAreaLightHelper","canvas","useEffect","texture","Home","scene","Scene","texturLoader","TextureLoader","star","load","particalGeometry","count","positions","Float32Array","colors","i","Math","random","setAttribute","particleMaterial","PointsMaterial","size","sizeAttenuation","transparent","alphaMap","depthWrite","blending","AdditiveBlending","vertexColors","particle","Points","add","ambientLight","AmbientLight","sizes","width","window","innerWidth","height","innerHeight","camera","PerspectiveCamera","position","z","document","querySelector","console","log","renderer","WebGLRenderer","setSize","controls","enableDamping","clock","Clock","tick","elapsedTime","getElapsedTime","n","x","attributes","array","sin","needsUpdate","update","render","requestAnimationFrame"],"sources":["C:/Webathon/artisticdots/src/Pages/Home/Home.jsx"],"sourcesContent":["import React from 'react'\r\nimport * as THREE from 'three'\r\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls' //(use it after camera)\r\nimport { BufferAttribute, BufferGeometry } from 'three'\r\n// import dat from 'dat.gui'\r\nimport { RectAreaLightHelper } from 'three/examples/jsm/helpers/RectAreaLightHelper.js'\r\nimport canvas from '../../Pages/Home/Home'\r\nimport { useEffect } from 'react'\r\nimport texture from '../../Assets/textures/1.png'\r\n\r\n\r\nexport default function Home() {\r\n\r\n  useEffect(() => {\r\n\r\n    const scene = new THREE.Scene()\r\n    const texturLoader = new THREE.TextureLoader()\r\n    const star = texturLoader.load(texture)\r\n\r\n    //Customs Geometry\r\n\r\n    const particalGeometry = new THREE.BufferGeometry()\r\n    const count = 100\r\n\r\n    const positions = new Float32Array(count * 3) //Count * 3 because there is x  ,y, ,z to a single particle\r\n    const colors = new Float32Array(count * 3)\r\n\r\n    for (let i = 0; i < count * 3; i++) {\r\n      positions[i] = -0.5\r\n      colors[i] = Math.random()\r\n    }\r\n\r\n    particalGeometry.setAttribute(\r\n      'position',\r\n      new THREE.BufferAttribute(positions, 3)\r\n    )\r\n\r\n    particalGeometry.setAttribute(\r\n      'color',\r\n      new THREE.BufferAttribute(colors, 3)\r\n    )\r\n\r\n    //Material\r\n    const particleMaterial = new THREE.PointsMaterial({\r\n      size: 0.1,\r\n      sizeAttenuation: true, //Gives perspective small if far and big if near\r\n      // color : 0xff88cc, //hide so other colors won't be impacted\r\n      transparent: true,\r\n      alphaMap: star, //shows black edges from image \r\n      // alphaTest : 0.001 //Basically Telling renderer to not render the black part of image\r\n      // depthTest : false, //Basically says donot render which is forward and which is behind solves issue but not good when there is an object\r\n      depthWrite: false, //THis solves all our Issues\r\n      blending: THREE.AdditiveBlending, //Glows if there is particle over another ,\r\n      vertexColors: true //Whithout it wont change colors\r\n\r\n\r\n\r\n\r\n    })\r\n\r\n    const particle = new THREE.Points(particalGeometry, particleMaterial)\r\n    scene.add(particle)\r\n\r\n    const ambientLight = new THREE.AmbientLight(0xffffff, 0.5)\r\n    scene.add(ambientLight)\r\n\r\n\r\n    const sizes = {\r\n\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    }\r\n\r\n\r\n    const camera = new THREE.PerspectiveCamera(75, (sizes.width / sizes.height))\r\n\r\n    camera.position.z = 3\r\n\r\n    scene.add(camera)\r\n\r\n\r\n\r\n\r\n    const canvas = document.querySelector('.webgl')\r\n    console.log(canvas)\r\n\r\n\r\n    const renderer = new THREE.WebGLRenderer({\r\n      canvas: canvas,\r\n    })\r\n\r\n    renderer.setSize(sizes.width, sizes.height)\r\n\r\n    const controls = new OrbitControls(camera, canvas)\r\n    controls.enableDamping = true\r\n\r\n    //Clock \r\n\r\n    const clock = new THREE.Clock()\r\n\r\n\r\n    function tick() {\r\n\r\n\r\n      const elapsedTime = clock.getElapsedTime()\r\n\r\n\r\n      for (let i = 0; i < count; i++) {\r\n\r\n        const n = i * 3\r\n\r\n        const x = particalGeometry.attributes.position.array[n]\r\n        particalGeometry.attributes.position.array[n + 1] = Math.sin(elapsedTime + x) //n + 1 will access y \r\n\r\n      }\r\n\r\n      particalGeometry.attributes.position.needsUpdate = true //to update attributes\r\n\r\n      //Update Controls\r\n      controls.update()\r\n\r\n\r\n      //render\r\n      renderer.render(scene, camera);\r\n\r\n      window.requestAnimationFrame(tick) // requestAnimationFrame() runs at 60 Frames per Second(FPS)\r\n\r\n    }\r\n\r\n    tick()\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <>\r\n      <div>Home</div>\r\n      <canvas className=\"webgl\"></canvas>\r\n    </>\r\n  )\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}