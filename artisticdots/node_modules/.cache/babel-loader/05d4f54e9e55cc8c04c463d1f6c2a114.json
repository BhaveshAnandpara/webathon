{"ast":null,"code":"import { BackSide, BufferGeometry, Float32BufferAttribute, Line, LineBasicMaterial, Mesh, MeshBasicMaterial } from 'three';\n/**\r\n *  This helper must be added as a child of the light\r\n */\n\nclass RectAreaLightHelper extends Line {\n  constructor(light, color) {\n    const positions = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, -1, 0, 1, 1, 0];\n    const geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n    geometry.computeBoundingSphere();\n    const material = new LineBasicMaterial({\n      fog: false\n    });\n    super(geometry, material);\n    this.light = light;\n    this.color = color; // optional hardwired color for the helper\n\n    this.type = 'RectAreaLightHelper'; //\n\n    const positions2 = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, -1, 0];\n    const geometry2 = new BufferGeometry();\n    geometry2.setAttribute('position', new Float32BufferAttribute(positions2, 3));\n    geometry2.computeBoundingSphere();\n    this.add(new Mesh(geometry2, new MeshBasicMaterial({\n      side: BackSide,\n      fog: false\n    })));\n  }\n\n  updateMatrixWorld() {\n    this.scale.set(0.5 * this.light.width, 0.5 * this.light.height, 1);\n\n    if (this.color !== undefined) {\n      this.material.color.set(this.color);\n      this.children[0].material.color.set(this.color);\n    } else {\n      this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity); // prevent hue shift\n\n      const c = this.material.color;\n      const max = Math.max(c.r, c.g, c.b);\n      if (max > 1) c.multiplyScalar(1 / max);\n      this.children[0].material.color.copy(this.material.color);\n    } // ignore world scale on light\n\n\n    this.matrixWorld.extractRotation(this.light.matrixWorld).scale(this.scale).copyPosition(this.light.matrixWorld);\n    this.children[0].matrixWorld.copy(this.matrixWorld);\n  }\n\n  dispose() {\n    this.geometry.dispose();\n    this.material.dispose();\n    this.children[0].geometry.dispose();\n    this.children[0].material.dispose();\n  }\n\n}\n\nexport { RectAreaLightHelper };","map":{"version":3,"names":["BackSide","BufferGeometry","Float32BufferAttribute","Line","LineBasicMaterial","Mesh","MeshBasicMaterial","RectAreaLightHelper","constructor","light","color","positions","geometry","setAttribute","computeBoundingSphere","material","fog","type","positions2","geometry2","add","side","updateMatrixWorld","scale","set","width","height","undefined","children","copy","multiplyScalar","intensity","c","max","Math","r","g","b","matrixWorld","extractRotation","copyPosition","dispose"],"sources":["D:/webathon/artisticdots/node_modules/three/examples/jsm/helpers/RectAreaLightHelper.js"],"sourcesContent":["import {\r\n\tBackSide,\r\n\tBufferGeometry,\r\n\tFloat32BufferAttribute,\r\n\tLine,\r\n\tLineBasicMaterial,\r\n\tMesh,\r\n\tMeshBasicMaterial\r\n} from 'three';\r\n\r\n/**\r\n *  This helper must be added as a child of the light\r\n */\r\n\r\nclass RectAreaLightHelper extends Line {\r\n\r\n\tconstructor( light, color ) {\r\n\r\n\t\tconst positions = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\r\n\r\n\t\tconst geometry = new BufferGeometry();\r\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\r\n\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\tconst material = new LineBasicMaterial( { fog: false } );\r\n\r\n\t\tsuper( geometry, material );\r\n\r\n\t\tthis.light = light;\r\n\t\tthis.color = color; // optional hardwired color for the helper\r\n\t\tthis.type = 'RectAreaLightHelper';\r\n\r\n\t\t//\r\n\r\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\r\n\r\n\t\tconst geometry2 = new BufferGeometry();\r\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\r\n\t\tgeometry2.computeBoundingSphere();\r\n\r\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { side: BackSide, fog: false } ) ) );\r\n\r\n\t}\r\n\r\n\tupdateMatrixWorld() {\r\n\r\n\t\tthis.scale.set( 0.5 * this.light.width, 0.5 * this.light.height, 1 );\r\n\r\n\t\tif ( this.color !== undefined ) {\r\n\r\n\t\t\tthis.material.color.set( this.color );\r\n\t\t\tthis.children[ 0 ].material.color.set( this.color );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t\t\t// prevent hue shift\r\n\t\t\tconst c = this.material.color;\r\n\t\t\tconst max = Math.max( c.r, c.g, c.b );\r\n\t\t\tif ( max > 1 ) c.multiplyScalar( 1 / max );\r\n\r\n\t\t\tthis.children[ 0 ].material.color.copy( this.material.color );\r\n\r\n\t\t}\r\n\r\n\t\t// ignore world scale on light\r\n\t\tthis.matrixWorld.extractRotation( this.light.matrixWorld ).scale( this.scale ).copyPosition( this.light.matrixWorld );\r\n\r\n\t\tthis.children[ 0 ].matrixWorld.copy( this.matrixWorld );\r\n\r\n\t}\r\n\r\n\tdispose() {\r\n\r\n\t\tthis.geometry.dispose();\r\n\t\tthis.material.dispose();\r\n\t\tthis.children[ 0 ].geometry.dispose();\r\n\t\tthis.children[ 0 ].material.dispose();\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { RectAreaLightHelper };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}